/*
input data using datalines
proc print
obs/firstobs/lastobs
delete
scan
tranwrd
left

substr
compress - remove all the blanks 
reverse
length
strip - leading and trailing blanks
trim - trailing blanks
CATS - remove leading and trailing
CATX - remove trailing 
CATT - remove leading and trailing and place single space
lastobs 
rownumber=_n_
retain
lag
put and input functino
if/else do loops
intxn function - increment and subtract (day, month and year)
intck function - difference in two dates
extract day, month and year
*/

/******************************************/
data abc;
input id name $4-20 age team $ start_weight end_weight;
Loss = end_weight-start_weight;
datalines;
101 Gurdeep Singh  34 red 100 200
102 Lin Lan 23 green 300 400
103 Romit.Bhatia  22 black 10 200
;
run;

/*****************************************/
proc print data=abc;
title abc;
run;

/****************************************/
data scores;
input Name $ Test_1 Test_2 Test_3;
datalines;
Bill 187 97 103
Carlos 156 76 74
Monique 99 102 129
;

/*Read from 10th to 15th obs */
data city2;
set city(firstobs=10 obs=15);
run;

proc print;

title 'City Expenditures';
title2 '1991-2000';
run;

/*keep selected values*/

data services;
set scores (keep=Name Test_1 Test_2);
run;

data services2;
set services;
drop Test_2;
run;

proc print data=services2;
run; 

/*if-else statement*/

data abc2;
set abc;
if team='red' then flag="For 10 people";
else if team = 'green' then flag = 'Yes';
else if team = 'black' then flag2 = 'For 30 people";
run;

/*length*/
data abc4;
length Airport $ 10;
set abc;
if team='red' then Airport ="SFO";
else if team = 'green' then Airport = "HNL";
else if team = 'black' then Airport = "JFK or LGA";
run; 

/* delete */
data abc3; 
set abc;
if team = 'red' then delete;
run;

/* scan=SCAN(source, n<, list-of-delimiters>)

LEFT(source)
The LEFT function produces a value that has all leading blanks in the source moved to the right side of the value; 
therefore, the result is left aligned.
*/

data abc5;
set abc;
scan_fun=scan(name, 1, ' ');
left_fun = left(scan(name, 2, ' '));
name2=tranwrd(name, "Gurdeep", "GD");
run;

/*concat*/
data abc6;
set abc5;
concat = scan_fun // left_fun;
run;

/* TRIM(source)
The TRIM function produces a value without the trailing blanks in the source.

AllGate2 = trim (USGate)
*/

SUBSTR (TIN, 1,3) IN ('000','999');
TIN = compress (reverse(substr(reverse(compress(REF_NUM)), 1, min(length(compress(REF_NUM)),9))));

%LET var1= '  hi ';
%LET var2= compress(var1);

data qwe;
input name $0-20;
datalines;
    Gurd
    ;
run;

data qwe2;
set qwe;
compress_func=compress(name);
run;

data qwe2;
set qwe;
reverse_func=reverse(name);
run;

data qwe2;
set qwe;
reverse_func=reverse(name);
reverse_comp_func=reverse(compress(name));
run;

/*
STRIP function - remove all leading and trailing blanks
TRIM function - removes all trailing blanks
COMPRESS function - removes all blanks (by default - specify options to remove other chars)
*/

data qqq;
  length text $15;
  format text $char15.;
  text = " ab cde f   ';
  trim = "*"













